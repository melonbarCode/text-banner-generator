{"version":3,"sources":["components/Header/Header.js","components/Navbar/Navbar.js","common/constants.js","common/utils.js","contexts/globalContext.js","components/TextBannerMaker/ButtonArea.js","components/TextBannerMaker/InputArea.js","components/TextBannerMaker/MySwatch.js","components/TextBannerMaker/Swatches.js","components/TextBannerMaker/MyColorPicker.js","components/TextBannerMaker/PickerIcon.js","components/TextBannerMaker/Palette.js","components/TextBannerMaker/SelectArea.js","components/TextBannerMaker/TextBannerPreview.js","components/TextBannerMaker/TextBannerMaker.js","App.js","index.js"],"names":["HeaderStyledWrapper","styled","div","Header","props","className","onClick","window","location","reload","NavbarStyledWrapper","Navbar","linklist","label","open","map","linkItem","key","PICKER_TYPE","SWATCH_PRESET","FONTS","getContrastYIQ","color","parseInt","substr","GlobalContext","createContext","state","canvasText","canvasFontSize","canvasFontFamily","canvasWidth","canvasHeight","canvasBackgroundColor","canvasFontColor","canvasImageDownlink","actions","setCanvasText","setCanvasFontSize","fontSize","setCanvasFontFamily","fontFamily","setCanvasWidth","width","setCanvasHeight","height","setCanvasBackgroundColor","hex","setCanvasFontColor","setCanvasImageDownlink","link","GlobalProvider","children","initColor","Math","random","toString","slice","contrastColor","useState","value","Provider","ButtonAreaStyledWrapper","ButtonArea","useContext","DownloadBtn","useMemo","href","download","split","join","InputAreaStyledWrapper","InputArea","TextInput","onChange","e","target","size","placeholder","SizeInput","handleHover","hover","onSwatchHover","edge","hoverSwatch","opacity","boxShadow","transition","styles","reactCSS","default","swatch","borderBottomRightRadius","borderBottomLeftRadius","style","onHover","focusStyle","Swatches","colors","marginTop","display","flexDirecection","flexFlow","justifyContent","marginBottom","idx","CustomPicker","hsl","hsv","body","borderRadius","backgroundColor","Saturation","saturation","paddingBottom","position","overflow","hue","triangle","borderStyle","borderWidth","borderColor","left","marginLeft","squareShadow","top","roundShadow","onChangeComplete","flexDirection","source","PickerIcon","hexColor","pickerType","iconName","pickerHandler","showPicker","setShowPicker","colorRect","alignItems","border","cursor","margin","icon","handleChange","event","type","zIndex","right","bottom","PaletteStyledWrapper","Palette","Option","Select","SelectAreaStyledWrapper","SelectArea","fontSizeList","fontFamilyList","FontFamilySelect","FontSizeSelect","TextBannerPreviewStyledWrapper","setCanvasFont","canvas","params","ctx","getContext","family","font","fillStyle","textAlign","textBaseline","drawText","text","defaultWidth","defaultHeight","fontHeight","lines","length","line","index","middle","h","fillText","mid","reduce","prev","curr","subtract","push","sign","offset","TextBannerPreview","canvasRef","useRef","useEffect","a","current","fillRect","toDataURL","render","ref","TextBannerMaker","TextBannerMakerStyledWrapper","App","NavAndHeader","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e7423e99.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HEADER_TITLE = 'TEXT BANNER GENERATOR';\r\n\r\n/**\r\n * @param {*} props\r\n * @description Header 컴포넌트\r\n */\r\nconst Header = (props) => {\r\n  return (\r\n    <HeaderStyledWrapper>\r\n      <span className='header-title' onClick={() => window.location.reload()}>\r\n        {HEADER_TITLE}\r\n      </span>\r\n    </HeaderStyledWrapper>\r\n  );\r\n};\r\n\r\nconst HeaderStyledWrapper = styled.div`\r\n  text-align: center;\r\n  padding: 50px;\r\n\r\n  .header-title {\r\n    border: 1px solid #dddddd;\r\n    box-sizing: border-box;\r\n    padding: 30px;\r\n    opacity: 1;\r\n    transition: opacity 0.3s ease-in-out;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .header-title:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PORTFOLIO_LINK = 'https://melonbarcode.site/';\r\nconst TEXT_BANNER_GENERATOR_GIT_LINK = 'https://github.com/melonbarCode/text-banner-generator';\r\n\r\n/**\r\n * @param {*} props\r\n * @description Navigation Bar 컴포넌트\r\n */\r\nconst Navbar = (props) => {\r\n  const linklist = [\r\n    {\r\n      label: 'INTRODUCE SITE',\r\n      onClick: () => {\r\n        window.open(PORTFOLIO_LINK);\r\n      },\r\n    },\r\n    {\r\n      label: 'GIT',\r\n      onClick: () => {\r\n        window.open(TEXT_BANNER_GENERATOR_GIT_LINK);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <NavbarStyledWrapper>\r\n      <ul className='nav-link-list'>\r\n        {linklist.map((linkItem) => (\r\n          <li key={linkItem.label} className='nav-list-item' onClick={linkItem.onClick}>\r\n            {linkItem.label}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </NavbarStyledWrapper>\r\n  );\r\n};\r\n\r\nconst NavbarStyledWrapper = styled.div`\r\n  text-align: right;\r\n  padding: 10px;\r\n\r\n  .nav-link-list {\r\n    display: inline-flex;\r\n  }\r\n\r\n  .nav-list-item {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    padding: 20px;\r\n    opacity: 1;\r\n    transition: opacity 0.3s ease-in-out;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .nav-list-item:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport default Navbar;\r\n","export const PICKER_TYPE = {\r\n  BACKGROUND: 'background',\r\n  TEXT: 'text',\r\n};\r\n\r\nexport const SWATCH_PRESET = [\r\n  '#f44336',\r\n  '#e91e63',\r\n  '#9c27b0',\r\n  '#673ab7',\r\n  '#3f51b5',\r\n  '#2196f3',\r\n  '#03a9f4',\r\n  '#00bcd4',\r\n  '#009688',\r\n  '#4caf50',\r\n  '#8bc34a',\r\n  '#cddc39',\r\n  '#ffeb3b',\r\n  '#ffc107',\r\n  '#ff9800',\r\n  '#ff5722',\r\n];\r\n\r\nexport const FONTS = {\r\n  HELVETICA: 'Helvetica',\r\n};\r\n","export const getContrastYIQ = (color) => {\r\n  const r = parseInt(color.substr(0, 2), 16);\r\n  const g = parseInt(color.substr(2, 2), 16);\r\n  const b = parseInt(color.substr(4, 2), 16);\r\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\r\n  return yiq >= 220 ? '#000000' : '#ffffff';\r\n};\r\n\r\nexport const getRandomHexColor = () => `#${`0${(~~(Math.random() * 16777215)).toString(16)}`.slice(-6)}`;\r\n","import React, { createContext, useState } from 'react';\r\nimport { FONTS } from '../common/constants';\r\nimport { getContrastYIQ, getRandomHexColor } from '../common/utils';\r\n\r\n/**\r\n * @description 전역 state context api\r\n */\r\nconst GlobalContext = createContext({\r\n  state: {\r\n    canvasText: '',\r\n    canvasFontSize: '',\r\n    canvasFontFamily: '',\r\n    canvasWidth: '',\r\n    canvasHeight: '',\r\n    canvasBackgroundColor: '',\r\n    canvasFontColor: '',\r\n    canvasImageDownlink: '',\r\n  },\r\n  actions: {\r\n    setCanvasText: () => {},\r\n    setCanvasFontSize: (fontSize) => {},\r\n    setCanvasFontFamily: (fontFamily) => {},\r\n    setCanvasWidth: (width) => {},\r\n    setCanvasHeight: (height) => {},\r\n    setCanvasBackgroundColor: (hex) => {},\r\n    setCanvasFontColor: (hex) => {},\r\n    setCanvasImageDownlink: (link) => {},\r\n  },\r\n});\r\n\r\n/**\r\n * @param {*} param0 {children} 하위 리액트 컴포넌트\r\n * @description 전역 context provider\r\n */\r\nconst GlobalProvider = ({ children }) => {\r\n  const initColor = getRandomHexColor();\r\n  const contrastColor = getContrastYIQ(initColor.slice(-6));\r\n\r\n  const [canvasText, setCanvasText] = useState('');\r\n  const [canvasFontSize, setCanvasFontSize] = useState('40');\r\n  const [canvasFontFamily, setCanvasFontFamily] = useState(FONTS.HELVETICA);\r\n  const [canvasWidth, setCanvasWidth] = useState(620);\r\n  const [canvasHeight, setCanvasHeight] = useState(435);\r\n  const [canvasBackgroundColor, setCanvasBackgroundColor] = useState(initColor);\r\n  const [canvasFontColor, setCanvasFontColor] = useState(contrastColor);\r\n  const [canvasImageDownlink, setCanvasImageDownlink] = useState('');\r\n\r\n  const value = {\r\n    state: {\r\n      canvasText,\r\n      canvasFontSize,\r\n      canvasFontFamily,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      canvasBackgroundColor,\r\n      canvasFontColor,\r\n      canvasImageDownlink,\r\n    },\r\n    actions: {\r\n      setCanvasText,\r\n      setCanvasFontSize,\r\n      setCanvasFontFamily,\r\n      setCanvasWidth,\r\n      setCanvasHeight,\r\n      setCanvasBackgroundColor,\r\n      setCanvasFontColor,\r\n      setCanvasImageDownlink,\r\n    },\r\n  };\r\n\r\n  return <GlobalContext.Provider value={value}>{children}</GlobalContext.Provider>;\r\n};\r\n\r\nexport { GlobalContext, GlobalProvider };\r\n","import React, { useContext, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GlobalContext } from '../../contexts/globalContext';\r\nimport { Button } from 'antd';\r\n\r\n/**\r\n * @param {*} props\r\n * @description Button Area 컴포넌트\r\n */\r\nconst ButtonArea = (props) => {\r\n  const { state } = useContext(GlobalContext);\r\n  const { canvasImageDownlink, canvasText } = state;\r\n\r\n  const DownloadBtn = useMemo(\r\n    () => (\r\n      <a href={canvasImageDownlink} download={`${canvasText.split(' ').join('_')}.png`}>\r\n        <Button className='download-btn'>Download</Button>\r\n      </a>\r\n    ),\r\n    [canvasImageDownlink, canvasText],\r\n  );\r\n\r\n  return <ButtonAreaStyledWrapper>{DownloadBtn}</ButtonAreaStyledWrapper>;\r\n};\r\n\r\nconst ButtonAreaStyledWrapper = styled.div`\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n\r\n  .download-btn {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nexport default ButtonArea;\r\n","import React, { useContext, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GlobalContext } from '../../contexts/globalContext';\r\nimport { Input } from 'antd';\r\n\r\n/**\r\n * @param {*} props\r\n * @description Input Area 컴포넌트\r\n */\r\nconst InputArea = (props) => {\r\n  const { state, actions } = useContext(GlobalContext);\r\n  const { canvasText, canvasWidth, canvasHeight } = state;\r\n  const { setCanvasText, setCanvasWidth, setCanvasHeight } = actions;\r\n\r\n  const TextInput = useMemo(\r\n    () => (\r\n      <Input\r\n        onChange={(e) => setCanvasText(e.target.value)}\r\n        value={canvasText}\r\n        className='banner-title-input'\r\n        size='large'\r\n        placeholder=\"TYPE BANNER TITLE ' 3')/ \"\r\n      />\r\n    ),\r\n    [canvasText, setCanvasText],\r\n  );\r\n\r\n  const SizeInput = useMemo(\r\n    () => (\r\n      <div>\r\n        <Input\r\n          onChange={(e) => setCanvasWidth(e.target.value)}\r\n          value={canvasWidth}\r\n          className='banner-size-input'\r\n          placeholder='width'\r\n        />\r\n        <Input\r\n          onChange={(e) => setCanvasHeight(e.target.value)}\r\n          value={canvasHeight}\r\n          className='banner-size-input'\r\n          placeholder='height'\r\n        />\r\n      </div>\r\n    ),\r\n    [canvasWidth, canvasHeight, setCanvasWidth, setCanvasHeight],\r\n  );\r\n\r\n  return (\r\n    <InputAreaStyledWrapper>\r\n      {TextInput}\r\n      {SizeInput}\r\n    </InputAreaStyledWrapper>\r\n  );\r\n};\r\n\r\nconst InputAreaStyledWrapper = styled.div`\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  margin-top: 30px;\r\n\r\n  .banner-title-input {\r\n    width: 620px;\r\n    margin: 20px;\r\n    background: none;\r\n    border: none;\r\n    border-bottom: 1px solid #dddddd;\r\n    text-align: center;\r\n    color: #dddddd;\r\n  }\r\n\r\n  .banner-size-input {\r\n    width: 300px;\r\n    margin: 10px;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default InputArea;\r\n","import React from 'react';\nimport reactCSS, { handleHover } from 'reactcss';\nimport { Swatch } from 'react-color/lib/components/common';\n\nexport const MySwatch = ({ hover, color, onClick, onSwatchHover, edge }) => {\n  const hoverSwatch = {\n    opacity: '0.5',\n    boxShadow: `inset 0 0 0 4px ${color}`,\n    transition: `opacity 150ms ease 0s`,\n  };\n\n  const styles = reactCSS(\n    {\n      default: {\n        swatch: {\n          width: '24px',\n          height: '24px',\n          borderBottomRightRadius: `${edge === 'bottomRight' ? '12px' : 0}`,\n          borderBottomLeftRadius: `${edge === 'bottomLeft' ? '12px' : 0}`,\n          transition: `box-shadow 100ms ease 0s`,\n        },\n      },\n      hover: {\n        swatch: hoverSwatch,\n      },\n    },\n    { hover },\n  );\n  return (\n    <div>\n      <Swatch color={color} onClick={onClick} style={styles.swatch} onHover={onSwatchHover} focusStyle={hoverSwatch} />\n    </div>\n  );\n};\n\nexport default handleHover(MySwatch);\n","import React from 'react';\nimport MySwatch from './MySwatch';\n\nexport const Swatches = ({ colors, onClick, onSwatchHover }) => {\n  const styles = {\n    swatches: {\n      marginTop: '5px',\n      display: 'flex',\n      flexDirecection: 'row',\n      flexFlow: 'row wrap',\n      justifyContent: 'center',\n      marginBottom: '5px',\n    },\n  };\n\n  return (\n    <div style={styles.swatches}>\n      {colors.map((color, idx) => {\n        let edge = '';\n        if (idx === 8) {\n          edge = 'bottomLeft';\n        } else if (idx === 15) {\n          edge = 'bottomRight';\n        }\n        return <MySwatch key={color} color={color} onClick={onClick} onSwatchHover={onSwatchHover} edge={edge} />;\n      })}\n    </div>\n  );\n};\n\nexport default Swatches;\n","import React from 'react';\nimport { CustomPicker } from 'react-color';\nimport { SWATCH_PRESET } from '../../common/constants';\nimport { Saturation, Hue } from 'react-color/lib/components/common';\nimport Swatches from './Swatches';\n\n/**\n *\n * @param {*} param0\n * @description COLOR PICKER\n *\n * 클릭 시, 색상 클릭 피커가 발생\n */\nexport const MyColorPicker = ({ hsl, hsv, onChange, onSwatchHover }) => {\n  const styles = {\n    body: {\n      borderRadius: '14px',\n      width: '200px',\n      backgroundColor: '#fff',\n      transition: `visibility 0s, opacity 0.5s linear`,\n    },\n    Saturation: {\n      borderRadius: '5px 5px 0 0',\n    },\n    saturation: {\n      width: '100%',\n      paddingBottom: '55%',\n      position: 'relative',\n      borderRadius: '2px 2px 0 0',\n      overflow: 'hidden',\n    },\n    swatch: {\n      marginTop: '6px',\n      marginBottom: '5px',\n      width: '16px',\n      height: '16px',\n      borderRadius: '8px',\n      position: 'relative',\n      overflow: 'hidden',\n    },\n    hue: {\n      width: '200px',\n      height: ' 10px',\n      position: 'relative',\n    },\n    triangle: {\n      width: '0px',\n      height: '0px',\n      borderStyle: 'solid',\n      borderWidth: '10px 10px 10px 10px',\n      borderColor: `#fff transparent transparent transparent`,\n      position: 'absolute',\n      left: '50%',\n      marginLeft: '-10px',\n    },\n    squareShadow: {\n      position: 'absolute',\n      width: '200px',\n      top: '10px',\n      height: '150px',\n      boxShadow: '0px 0px 30px 5px rgba(0, 0, 0, 0.50)',\n    },\n    roundShadow: {\n      position: 'absolute',\n      top: '100px',\n      width: '200px',\n      height: '78px',\n      borderRadius: '12px',\n      backgroundColor: 'white',\n      boxShadow: '0px 0px 30px 5px rgba(0, 0, 0, 0.50)',\n    },\n  };\n\n  const handleSwatchChange = (hex, e) => onChange({ hex, source: 'swatch' }, e);\n\n  return (\n    <div style={styles.body}>\n      <div className='squareShadow' style={styles.squareShadow} />\n      <div className='roundShadow' style={styles.roundShadow} />\n      <div style={{ height: 0, width: 200, position: 'relative' }} />\n      <div style={styles.saturation}>\n        <Saturation hsl={hsl} hsv={hsv} onChange={onChange} onChangeComplete={onChange} />\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div style={styles.hue}>\n          <Hue hsl={hsl} onChange={onChange} />\n        </div>\n        <Swatches colors={SWATCH_PRESET} onClick={handleSwatchChange} onSwatchHover={onSwatchHover} />\n      </div>\n      <div style={styles.triangle} />\n    </div>\n  );\n};\n\nexport default CustomPicker(MyColorPicker);\n","import React, { useState } from 'react';\nimport MyColorPicker from './MyColorPicker';\nimport { PICKER_TYPE } from '../../common/constants';\nimport { getContrastYIQ } from '../../common/utils';\nimport { Icon } from 'antd';\n\n/**\n *\n * @param {*} param0\n * @description picker icon [아이콘]\n *\n * 클릭 시, 색상을 클릭할 수 있는 팔레트가 팝오버 됩니다.\n */\nconst PickerIcon = ({ hexColor, pickerType, iconName, pickerHandler }) => {\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleClose = () => {\n    setShowPicker(false);\n  };\n\n  const handleClick = () => {\n    setShowPicker(!showPicker);\n  };\n\n  const colorRect = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '40px',\n    height: '40px',\n    border: '1px solid #fff',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    margin: '10px',\n    backgroundColor: pickerType === PICKER_TYPE.BACKGROUND ? hexColor : getContrastYIQ(hexColor.slice(-6)),\n  };\n\n  const icon = {\n    color: pickerType === PICKER_TYPE.BACKGROUND ? getContrastYIQ(hexColor.slice(-6)) : hexColor,\n    fontSize: '1.6em',\n  };\n\n  const popover = {\n    position: 'absolute',\n    zIndex: '2',\n    top: '-192px',\n    left: '-75px',\n  };\n\n  // popover will be removed when you click the cover\n  const cover = {\n    position: 'fixed',\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px',\n  };\n\n  const handleChange = (colors, event) => {\n    pickerHandler({ ...colors, event, pickerType });\n  };\n\n  return (\n    <div className='pickerWrapper' style={{ position: 'relative' }}>\n      <div className='colorRect' style={colorRect} onClick={() => handleClick()}>\n        <Icon type={iconName} style={icon} />\n      </div>\n      {showPicker && (\n        <div style={popover}>\n          <div style={cover} onClick={() => handleClose()} />\n          <MyColorPicker color={hexColor} onChangeComplete={handleChange} onChange={handleChange} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PickerIcon;\n","import React, { useContext } from 'react';\nimport PickerIcon from './PickerIcon';\nimport { PICKER_TYPE } from '../../common/constants';\nimport { GlobalContext } from '../../contexts/globalContext';\nimport styled from 'styled-components';\n\n/**\n * @description 팔레트 컴포넌트 (배경색, 폰트색상)\n */\nconst Palette = () => {\n  const { state, actions } = useContext(GlobalContext);\n  const { canvasBackgroundColor, canvasFontColor } = state;\n  const { setCanvasBackgroundColor, setCanvasFontColor } = actions;\n\n  return (\n    <PaletteStyledWrapper>\n      <PickerIcon\n        pickerType={PICKER_TYPE.BACKGROUND}\n        hexColor={canvasBackgroundColor}\n        iconName='bg-colors'\n        pickerHandler={(value) => setCanvasBackgroundColor(value.hex)}\n      />\n      <PickerIcon\n        pickerType={PICKER_TYPE.TEXT}\n        hexColor={canvasFontColor}\n        iconName='font-colors'\n        pickerHandler={(value) => setCanvasFontColor(value.hex)}\n      />\n    </PaletteStyledWrapper>\n  );\n};\n\nconst PaletteStyledWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: '5px';\n  justify-content: center;\n`;\n\nexport default Palette;\n","import React, { useContext, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GlobalContext } from '../../contexts/globalContext';\r\nimport { Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\n/**\r\n * @param {*} props\r\n * @description Select Area 컴포넌트\r\n */\r\nconst SelectArea = (props) => {\r\n  const fontSizeList = [10, 20, 30, 40, 50, 60, 80, 100, 110, 120, 150, 180, 200];\r\n  const fontFamilyList = ['Helvetica'];\r\n\r\n  const { state, actions } = useContext(GlobalContext);\r\n  const { canvasFontSize, canvasFontFamily } = state;\r\n  const { setCanvasFontSize, setCanvasFontFamily } = actions;\r\n\r\n  const FontFamilySelect = useMemo(\r\n    () => (\r\n      <Select value={canvasFontFamily} onChange={(value) => setCanvasFontFamily(value)} className='font-select'>\r\n        {fontFamilyList.map((fontFamily) => (\r\n          <Option key={fontFamily} value={fontFamily}>\r\n            {fontFamily}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    ),\r\n    [fontFamilyList, canvasFontFamily, setCanvasFontFamily],\r\n  );\r\n\r\n  const FontSizeSelect = useMemo(\r\n    () => (\r\n      <Select value={canvasFontSize} onChange={(value) => setCanvasFontSize(value)} className='font-select'>\r\n        {fontSizeList.map((fontSize) => (\r\n          <Option key={fontSize} value={fontSize}>\r\n            {fontSize}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n    ),\r\n    [fontSizeList, canvasFontSize, setCanvasFontSize],\r\n  );\r\n\r\n  return (\r\n    <SelectAreaStyledWrapper>\r\n      {FontFamilySelect}\r\n      {FontSizeSelect}\r\n    </SelectAreaStyledWrapper>\r\n  );\r\n};\r\n\r\nconst SelectAreaStyledWrapper = styled.div`\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n\r\n  .font-select {\r\n    width: 300px;\r\n    margin: 10px;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default SelectArea;\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GlobalContext } from '../../contexts/globalContext';\r\nconst DEFAULT_TEXT = 'SAMPLE TEXT';\r\n\r\n/**\r\n * @description 다운로드가 가능한 텍스트 배너를 미리 보여줍니다\r\n */\r\nconst TextBannerPreview = () => {\r\n  const { state, actions } = useContext(GlobalContext);\r\n  const {\r\n    canvasText,\r\n    canvasFontSize,\r\n    canvasFontFamily,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    canvasBackgroundColor,\r\n    canvasFontColor,\r\n  } = state;\r\n\r\n  const { setCanvasImageDownlink } = actions;\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const render = async () => {\r\n      const canvas = canvasRef.current;\r\n      canvas.width = canvasWidth;\r\n      canvas.height = canvasHeight;\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      ctx.fillStyle = canvasBackgroundColor;\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      setCanvasFont(canvas, {\r\n        color: canvasFontColor,\r\n        size: canvasFontSize,\r\n        family: canvasFontFamily,\r\n      });\r\n\r\n      drawText(canvas, canvasText || DEFAULT_TEXT, 40);\r\n      setCanvasImageDownlink(canvas.toDataURL());\r\n    };\r\n    render();\r\n  }, [\r\n    canvasText,\r\n    canvasFontSize,\r\n    canvasFontFamily,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    canvasBackgroundColor,\r\n    canvasFontColor,\r\n    setCanvasImageDownlink,\r\n  ]);\r\n\r\n  return (\r\n    <TextBannerPreviewStyledWrapper>\r\n      <canvas ref={canvasRef} />\r\n    </TextBannerPreviewStyledWrapper>\r\n  );\r\n};\r\n\r\nconst TextBannerPreviewStyledWrapper = styled.div`\r\n  text-align: center;\r\n  margin: 10px auto;\r\n  /* overflow: hidden; */\r\n  /* width: 300px; */\r\n`;\r\n\r\n/**\r\n *\r\n * @param {*} canvas canvas element\r\n * @param {*} params font size, font color, font family\r\n * @description 캔버스의 들어갈 폰트의 size와 color, 글씨체를 설정해줍니다.\r\n */\r\nexport const setCanvasFont = (canvas, params) => {\r\n  const ctx = canvas.getContext('2d');\r\n  const { color, size, family } = params;\r\n  ctx.font = `${size}px ${family}`;\r\n  ctx.fillStyle = color;\r\n  ctx.textAlign = 'center';\r\n  ctx.textBaseline = 'middle';\r\n};\r\n\r\n/**\r\n * @param {*} canvas canvas element\r\n * @param {*} text banner text\r\n * @param {*} fontSize text size\r\n * @description 캔버스 배너 가운데에 텍스트를 기입합니다\r\n */\r\nexport const drawText = (canvas, text, fontSize) => {\r\n  const ctx = canvas.getContext('2d');\r\n  const defaultWidth = canvas.width / 2;\r\n  const defaultHeight = canvas.height / 2;\r\n  const fontHeight = fontSize * 1.4;\r\n  const SEPARATOR = '\\\\n';\r\n  const lines = text.split(SEPARATOR);\r\n\r\n  if (lines.length % 2) {\r\n    lines.map((line, index) => {\r\n      const middle = parseInt((lines.length / 2).toString(), 10);\r\n      const h = defaultHeight + (index - middle) * fontHeight;\r\n      ctx.fillText(line, defaultWidth, h);\r\n      return null;\r\n    });\r\n  } else {\r\n    const mid = (lines.length - 1) / 2;\r\n    const offsets = lines\r\n      .map((line, index) => index)\r\n      .reduce((prev, curr) => {\r\n        const subtract = curr - mid;\r\n        prev.push([subtract < 0, parseInt(subtract.toString(), 10)]);\r\n        return prev;\r\n      }, []);\r\n    offsets.map(([sign, offset], index) => {\r\n      const position = offset * fontHeight;\r\n      const e = sign ? (fontHeight / 2) * -1 : fontHeight / 2;\r\n      const h = defaultHeight + position + e;\r\n      ctx.fillText(lines[index], defaultWidth, h);\r\n      return null;\r\n    });\r\n  }\r\n};\r\n\r\nexport default TextBannerPreview;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonArea from './ButtonArea';\r\nimport InputArea from './InputArea';\r\nimport Palette from './Palette';\r\nimport SelectArea from './SelectArea';\r\nimport TextBannerPreview from './TextBannerPreview';\r\n\r\nconst TextBannerMaker = (props) => {\r\n  return (\r\n    <TextBannerMakerStyledWrapper>\r\n      <TextBannerPreview />\r\n      <InputArea />\r\n      <SelectArea />\r\n      <Palette />\r\n      <ButtonArea />\r\n    </TextBannerMakerStyledWrapper>\r\n  );\r\n};\r\n\r\nexport default TextBannerMaker;\r\n\r\nconst TextBannerMakerStyledWrapper = styled.div`\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  margin-top: 30px;\r\n`;\r\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './styles/App.scss';\nimport Header from './components/Header';\nimport Navbar from './components/Navbar';\nimport TextBannerMaker from './components/TextBannerMaker';\nimport { GlobalProvider } from './contexts/globalContext';\nimport { useMemo } from 'react';\n\n/**\n * @description 초기 상위 컴포넌트 진입점\n */\nconst App = () => {\n  const NavAndHeader = useMemo(() => {\n    return (\n      <>\n        <Navbar />\n        <Header />\n      </>\n    );\n  }, []);\n\n  return (\n    <GlobalProvider>\n      <div className='App'>\n        {NavAndHeader}\n        <TextBannerMaker />\n      </div>\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}